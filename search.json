[{"path":"https://felixhenninger.github.io/cookiecutter/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Felix Henninger. Author, maintainer, copyright holder. National Research Data Infrastructure Germany. Funder.","code":""},{"path":"https://felixhenninger.github.io/cookiecutter/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Henninger F (2023). cookiecutter: Generate Project Files Template. https://github.com/felixhenninger/cookiecutter/, https://felixhenninger.github.io/cookiecutter/, https://github.com/FelixHenninger/cookiecutter.","code":"@Manual{,   title = {cookiecutter: Generate Project Files from a Template},   author = {Felix Henninger},   year = {2023},   note = {https://github.com/felixhenninger/cookiecutter/, https://felixhenninger.github.io/cookiecutter/, https://github.com/FelixHenninger/cookiecutter}, }"},{"path":[]},{"path":"https://felixhenninger.github.io/cookiecutter/index.html","id":"installation-","dir":"","previous_headings":"Usage 🍪","what":"Installation 📦","title":"Generate Project Files from a Template","text":"package available CRAN, can install via Alternatively, like live bleeding edge, can install development version:","code":"install.packages('cookiecutter') devtools::install_github('felixhenninger/cookiecutter@main')"},{"path":"https://felixhenninger.github.io/cookiecutter/index.html","id":"making-cookies-","dir":"","previous_headings":"Usage 🍪","what":"Making cookies 👩‍🍳","title":"Generate Project Files from a Template","text":"get started, ’ll need cookiecutter template, place extract . example, starting template directory run: ’ve downloaded template compressed archive directory, can clone locally.","code":"cookiecutter::bake(   'template_directory',   'output_directory' ) cookiecutter::bake(   'template.zip',   'output_directory' )"},{"path":"https://felixhenninger.github.io/cookiecutter/index.html","id":"crafting-a-template-","dir":"","previous_headings":"Usage 🍪","what":"Crafting a template 🛠","title":"Generate Project Files from a Template","text":"principle, directory already can serve cookiecutter template. box, use template, cookiecutter simply copy directory . Likewise, create zip, .tar .tar.gz archive directory, cookiecutter unpack output location. However, many things can make template user-friendly. Specifically, cookiecutter change names contents files according specifications. way works can insert placeholder, {{ cookiecutter.my_variable }} inside file (name directory name), cookiecutter try replace placeholder (curly braces ) contents my_variable. use placeholder alone, users need supply values variables bake template, like (, set variable topping, use file file name via {{ cookiecutter.topping }}): can help users figure variables available adding cookiecutter.json file template directory. , cookiecutter know variables needs, prompt users fill choose value. provide default, list choices, respectively. format file documented fully Python cookiecutter documentation, give impression options, ’s example:","code":"cookiecutter::bake(   'template.zip',   'output_directory',   extra_context = list(     topping = 'sprinkles'   ) ) {   \"cookie_eating_sound\": \"Om nom nom nom\",   \"cookie_local_term\": [\"cookie\", \"biscuit\"] }"},{"path":"https://felixhenninger.github.io/cookiecutter/index.html","id":"limitations-️","dir":"","previous_headings":"","what":"Limitations ⚠️","title":"Generate Project Files from a Template","text":"cookiecutter package R aims compatible big sibling, present implements subset functionality. course, issues insurmountable, great places contribute! don’t (yet) provide full extent Jinja templating language cookiecutter uses. Specifically, present, don’t support logic templates. Naturally, don’t support Python code templates. don’t currently support cloning templates directly git repository. can still download repository contents clone directory archive. don’t support ~/.cookiecutterrc files. don’t support running scripts automatically populating template. ’re looking full power original, wholeheartedly recommend using — clone designed stop-gap, replacement. can whet appetite, ’s win book!","code":""},{"path":"https://felixhenninger.github.io/cookiecutter/reference/bake.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill a directory with files based on a cookiecutter template. — bake","title":"Fill a directory with files based on a cookiecutter template. — bake","text":"function takes cookiecutter-compatible template directory resolves template placeholders filenames (text files) content.","code":""},{"path":"https://felixhenninger.github.io/cookiecutter/reference/bake.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill a directory with files based on a cookiecutter template. — bake","text":"","code":"bake(   template,   output_path,   extra_context = list(),   overwrite = FALSE,   no_input = FALSE )"},{"path":"https://felixhenninger.github.io/cookiecutter/reference/bake.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill a directory with files based on a cookiecutter template. — bake","text":"template Template apply output_path Directory fill extra_context Context variables use populating template overwrite Whether overwrite existing files no_input prompt context variables specified cookiecutter.json","code":""},{"path":"https://felixhenninger.github.io/cookiecutter/reference/bake.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill a directory with files based on a cookiecutter template. — bake","text":"None","code":""},{"path":"https://felixhenninger.github.io/cookiecutter/reference/bake.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fill a directory with files based on a cookiecutter template. — bake","text":"template Path template apply. can point either directory, archive .zip, .tar .tar.gz formats. output_path Path directory output processed template files . filled based contents template option. extra_context List template variables use filling placeholders. (empty default) overwrite Whether overwrite existing files. (defaults false, issues message) no_input prompt user variable values specified cookiecutter.json. removes need interaction applying template.","code":""},{"path":"https://felixhenninger.github.io/cookiecutter/reference/bake.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill a directory with files based on a cookiecutter template. — bake","text":"","code":"# Extract a demo template # (this uses a bundled template and extracts information # into a temporary directory -- you'll have it easier # because you can insert the paths you want directly) cookiecutter::bake(   system.file('examples/demo.zip', package = 'cookiecutter'),   fs::path_temp('cookiecutter.demo'),   extra_context = list(     flavor = 'chocolate chip',     hot_beverage = 'coffee'   ) ) #> Please enter a value for flavor [chocolate chip] #>  #> Please enter a value for topping [chocolate chunks] #>  #> Please enter a value for hot_beverage [coffee] #>  #> Rendering \"chocolate chip recipe.md\""},{"path":"https://felixhenninger.github.io/cookiecutter/reference/generate_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a new directory from a template, given a predefined context — generate_files","title":"Generate a new directory from a template, given a predefined context — generate_files","text":"Generate new directory template, given predefined context","code":""},{"path":"https://felixhenninger.github.io/cookiecutter/reference/generate_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a new directory from a template, given a predefined context — generate_files","text":"","code":"generate_files(   template_dir,   output_dir,   context = list(),   context_prefix = NA,   exclude = c(),   overwrite = FALSE )"},{"path":"https://felixhenninger.github.io/cookiecutter/reference/generate_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a new directory from a template, given a predefined context — generate_files","text":"template_dir Template directory copy output_dir Target directory copy (defaults project directory) context Data available templates context_prefix Prefix key apply context data (see description) exclude Files exclude, array paths respect template directory overwrite Whether overwrite existing files","code":""},{"path":"https://felixhenninger.github.io/cookiecutter/news/index.html","id":"cookiecutter-010","dir":"Changelog","previous_headings":"","what":"cookiecutter 0.1.0","title":"cookiecutter 0.1.0","text":"CRAN release: 2023-09-08 Initial CRAN submission.","code":""}]
